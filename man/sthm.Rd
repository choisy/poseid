% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sthm.R
\name{sthm}
\alias{sthm}
\title{Makes a spatio-temporal heatmap of a disease}
\usage{
sthm(df, f = function(x) x, col = heat.colors(12), col_na = "grey",
  x = 0.85, show_legend = FALSE)
}
\arguments{
\item{df}{A  data frame. Should contains three variables: one of class
"character", one of class "Date", and one colums of 'numeric' class
containing the value to represent.}

\item{f}{a transforming function. By default the identity function.}

\item{col}{a vector of colors to use for the heatmap.}

\item{col_na}{the color with which to represent the missing values.}

\item{x}{a numeric value between 0 and 1. In proportion of the
figure's range, these numbers express the location of the right end of the
heatmap, and the beginning and end of the color scale that stands on the
right of the heatmap.}

\item{show_legend}{logical value saying whether the names of the
provinces and the value breaks should be returned as an output of the
function call or not. By default FALSE.}
}
\value{
A numeric vector corresponding to the value of the legend, returned
invisibly. \cr
If \code{show_legend = TRUE}, return a list
containing a numeric vector called \code{legend} corresponding to the value
of the legend, and a character vector called \code{province} containing the
name of the province in the order of the figure.
}
\description{
Makes a spatio-temporal heatmap of a disease
}
\examples{
library(gdpm)
library(dplyr)
library(magrittr)
# A heatmap of the ILI data:
ili <- getid(ili, from = 2004) \%>\%
  dplyr::mutate(time = as.Date(
                paste0(year, "-", as.numeric(month), "-", 15))) \%>\%
  dplyr::select(province, time, contains("incidence")) \%>\%
  dplyr::arrange(time)
sthm(ili)

# With a legend by using legend2 function:
col <- rev(heat.colors(10))
a <- sthm(ili, col = col)
legend2(.925, 1, legend =  a, col = col, postext = "right",
        h = 1/(length(a)-1), w = 0.04, tl = 0.01, s = 0.005)

# A large number of color can be used to
col <- rev(heat.colors(100))
a <- sthm(ili, col = col, col_na = "blue")
legend2(.925, 1, legend =  a, col = col, postext = "right", col_na = "blue",
        h = 1/(length(a)-1), w = 0.04, tl = 0.01, s = 0.005)

# With a legend by using legend2 function:
col <- rev(heat.colors(400))
a <- sthm(ili, col = col, col_na = "blue")
legend2(.925, 1, legend =  a, col = col, postext = "right", col_na = "blue",
        h = 1/(length(a)-1), w = 0.04, tl = 0.01, s = 0.005)

# with some data transformations in order to reflect better the contrasts:
a <- sthm(ili, f = sqrt, col = col)
legend2(.925, 1, legend =  a, col = col, postext = "right",
        h = 1/(length(a)-1), w = 0.035, tl = 0.01, s = 0.005, cex = 0.8)

a <- sthm(ili, f = function(x) x^.3, col = col)
legend2(.925, 1, legend =  a, col = col, postext = "right",
        h = 1/(length(a)-1), w = 0.04, tl = 0.01, s = 0.005, cex = 0.8)

# using some other color palettes, for examples the ones fromt the
# RColorBrewer package:
library(RColorBrewer)

a <- sthm(ili, f = function(x) x^.3, col = brewer.pal(11, "RdYlGn"))
legend2(.925, 1, legend =  a, col = brewer.pal(11, "RdYlGn"),
        postext = "right", n_round = 2,
        h = 1/(length(a)-1), w = 0.04, tl = 0.01,
        s = 0.005)

a <- sthm(ili, f = function(x) x^.3, col = brewer.pal(11, "RdYlBu"))
legend2(.925, 1, legend =  a, col = brewer.pal(11, "RdYlBu"),
        postext = "right", n_round = 2, h = 1/(length(a) - 1), w = 0.04,
        tl = 0.01,  s = 0.005)

# changing the color of the missing values:
rubella <- getid(rubella)  \%>\%
  mutate(time = as.Date(paste0(year, "-", as.numeric(month), "-", 15))) \%>\%
  select(province, time, contains("incidence")) \%>\%
  arrange(time)

a <- sthm(rubella, f = sqrt, col = col)
legend2(.925, 1, legend =  a, col = col, postext = "right",
        col_na = "grey", h = 1/(length(a) - 1), w = 0.04, tl = 0.01,
          s = 0.005)

a <- sthm(rubella, f = sqrt, col = brewer.pal(9, "YlOrRd"), col_na = "blue")
legend2(.925, 1, legend =  a, col = col, postext = "right", n_round = 2,
        col_na = "blue", h = 1/(length(a) - 1), w = 0.04, tl = 0.01,
          s = 0.005)

# to order the provinces by latitude:
library(gadmVN)
library(dplyr)
provinces <- gadm()
coord <- sp::coordinates(provinces)
row.names(coord) <- unique(provinces@data$province)
order <- rownames(coord[order(coord[, 2]), ])
order <- data.frame(province = order, order = seq_along(order))
rubella_order <- left_join(rubella, order, by = "province")
rubella_order <- arrange(rubella_order, order)
rubella_order <- select(rubella_order, -order)
a <- sthm(rubella_order, f = sqrt, col = brewer.pal(9, "YlOrRd"),
         col_na = "blue")
legend2(.925, 1, legend =  a, col = col, postext = "right", n_round = 2,
        col_na = "blue", h = 1/(length(a)-1), w = 0.04, tl = 0.01,
          s = 0.005)

# to print the province in the order of the figure:
a <- sthm(rubella_order, f = sqrt, col = brewer.pal(9, "YlOrRd"),
          col_na = "blue", show_legend = TRUE)
legend2(.925, 1, legend =  a$legend, col = col, postext = "right",
        n_round = 2, col_na = "blue", h = 1/(length(a)-1), w = 0.04, tl = 0.01,
          s = 0.005)
a
# list containing the legend vector and the province vector which correspond
# to the name of the province in the order of the figure.

}
