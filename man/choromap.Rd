% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/choromap.R
\name{choromap}
\alias{choromap}
\title{Draws a choropleth map}
\usage{
choromap(df, map, fixedBreaks, col = heat.colors(6), col_na = "grey", ...)
}
\arguments{
\item{df}{a data frame containing at two colums, one of class "character" and
one of class "numeric".}

\item{map}{an object of class "SpatialPolygonsDataFrame" containing at least
one column containing the same observations and name as the character column
of the dataframe \code{df}}

\item{fixedBreaks}{a vector of value used to specife the class intervals.}

\item{col}{a vector of colors to use for the map (by default,
\code{col = heat.colors(6)})}

\item{col_na}{the color with which to represent the missing values
(by default \code{col_na = "grey"})}

\item{...}{arguments to be passed to plot}
}
\value{
A numeric vector containing the breaks value and the attributes
\code{colors} corresponding to the color associated with the breaks value,
returned invisibly.
}
\description{
Draws a choropleth map
}
\details{
It's important that the parameters \code{df} and \code{map} has one
columns in commun, to be able to link them.
}
\examples{
library(gdpm)
library(magrittr)
library(gadmVN)

# dengue data
dengue <- getid(dengue, from = 1990, to = 2010)
# geographic data
map <- gadmVN::gadm(date = 1990, merge_hanoi = TRUE)

# A choroplet map of the dengue data:
# The first step is to select only the month and the year that we want to
# represent, here the incidence value of dengue in September 1993. We keep
# only the 'province' and 'incidence_dengue' column as the 'choromap'
# function accept only dataframe of the two columns in entry.
# The second step is to print the map.
# The last step is to print a legend, here we use legend2 of the 'poseid'
# package but other function can be used.
library(dplyr)
dengue_0993  <- filter(dengue, year == 1993, month == "September")
dengue_0993 <- select(dengue_0993, province, contains("incidence"))
a <- choromap(dengue_0993, map, fixedBreaks = c(0,10,50,100,500,1000,2000))
# return invisibly the information for the legend
legend2(legend = a, col = attr(a, "colors"), col_na = "grey")

# You can also use the '\%>\%' operator:
dengue_0993 \%>\%
  choromap(map, fixedBreaks = c(0,10,50,100,500,1000,2000)) \%>\%
  legend2(legend = ., col = attr(., "colors"), col_na = "grey")

# Using some other color palettes, for examples the ones from the
# RColorBrewer package or the one in the color Palettes of R, be careful
# to have a color vector of length n-1 compare to the lenght of fixedBreakss:
library(RColorBrewer)
# to see the available color palettes:
display.brewer.all()
dengue_0993 \%>\%
 choromap(map, fixedBreaks = c(0,10,50,100,500,1000,2000),
           col = brewer.pal(6, "YlOrRd")) \%>\%
 legend2(legend = ., col = attr(., "colors"), col_na = "grey")

# changing the color of the missing values:
dengue_0993 \%>\%
 choromap(map, fixedBreaks = c(0,10,50,100,500,1000,2000),
           col = brewer.pal(6, "YlOrRd"), col_na = "blue") \%>\%
 legend2(legend = ., col = attr(., "colors"), col_na = "blue")

# drawing a map without border:
dengue_0993 \%>\%
 choromap(map, fixedBreaks = c(0,10,50,100,500,1000,2000),
           col = brewer.pal(6, "YlOrRd"), col_na = "blue",
           border = NA) \%>\%
 legend2(legend = ., col = attr(., "colors"), col_na = "blue")

}
